{"remainingRequest":"/Users/tomohiro/programing/vue-django-kyujin/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tomohiro/programing/vue-django-kyujin/frontend/src/views/JobEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tomohiro/programing/vue-django-kyujin/frontend/src/views/JobEditor.vue","mtime":1643212626727},{"path":"/Users/tomohiro/programing/vue-django-kyujin/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1643030439459},{"path":"/Users/tomohiro/programing/vue-django-kyujin/frontend/node_modules/babel-loader/lib/index.js","mtime":1643030432819},{"path":"/Users/tomohiro/programing/vue-django-kyujin/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1643030439459},{"path":"/Users/tomohiro/programing/vue-django-kyujin/frontend/node_modules/vue-loader/lib/index.js","mtime":1643030438658}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGFwaVNlcnZpY2UgfSBmcm9tICIuLi9jb21tb24vYXBpLnNlcnZpY2UuanMiCgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAiSm9iRWRpdG9yIiwKICAgICAgICBwcm9wczogewogICAgICAgICAgIGlkOiB7CiAgICAgICAgICAgICAgIHR5cGU6IE51bWJlciwKICAgICAgICAgICAgICAgcmVxdWlyZWQ6IGZhbHNlCiAgICAgICAgICB9CiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBjb21wYW55X25hbWU6IG51bGwsCiAgICAgICAgICAgIGNvbXBhbnlfZW1haWw6IG51bGwsCiAgICAgICAgICAgIGpvYl90aXRsZTogbnVsbCwKICAgICAgICAgICAgam9iX2Rlc2NyaXB0aW9uOiBudWxsLAogICAgICAgICAgICBzYWxhcnk6IG51bGwsCiAgICAgICAgICAgIHByZWZlY3R1cmVzOiBudWxsLAogICAgICAgICAgICBjaXR5OiBudWxsLAogICAgICAgICAgICBlcnJvcjogbnVsbAogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgb25TdWJtaXQoKSB7CiAgICAgICAgICAgIGxldCBlbmRwb2ludCA9ICIvYXBpL2pvYnMvIjsKICAgICAgICAgICAgbGV0IG1ldGhvZCA9ICJQT1NUIjsKICAgICAgICAgICAgaWYgKHRoaXMuaWQgIT09IHVuZGVmaW5lZCkgewogICAgICAgICAgICAgICAgZW5kcG9pbnQgKz0gYCR7dGhpcy5pZH0vYDsKICAgICAgICAgICAgICAgIG1ldGhvZCA9ICJQVVQiOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGFwaVNlcnZpY2UoZW5kcG9pbnQsIG1ldGhvZCwgewogICAgICAgICAgICAgICAgY29tcGFueV9uYW1lOiB0aGlzLmNvbXBhbnlfbmFtZSwKICAgICAgICAgICAgICAgIGNvbXBhbnlfZW1haWw6IHRoaXMuY29tcGFueV9lbWFpbCwKICAgICAgICAgICAgICAgIGpvYl90aXRsZTogdGhpcy5qb2JfdGl0bGUsCiAgICAgICAgICAgICAgICBqb2JfZGVzY3JpcHRpb246IHRoaXMuam9iX2Rlc2NyaXB0aW9uLAogICAgICAgICAgICAgICAgc2FsYXJ5OiB0aGlzLnNhbGFyeSwKICAgICAgICAgICAgICAgIHByZWZlY3R1cmVzOiB0aGlzLnByZWZlY3R1cmVzLAogICAgICAgICAgICAgICAgY2l0eTogdGhpcy5jaXR5LAogICAgICAgICAgICB9KS50aGVuKGpvYl9kYXRhID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiAnam9iJywKICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHsgaWQ6IGpvYl9kYXRhLmlkIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0pCiAgICAgICAgfQogICAgfSwKICAgIGFzeW5jIGJlZm9yZVJvdXRlRW50ZXIgKHRvLCBmcm9tLCBuZXh0KSB7CiAgICAgICAgaWYgKHRvLnBhcmFtcy5pZCAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgIGxldCBlbmRwb2ludCA9IGAvYXBpL2pvYnMvJHsgdG8ucGFyYW1zLmlkIH0vYDsKICAgICAgICAgICAgbGV0IGRhdGEgPSBhd2FpdCBhcGlTZXJ2aWNlKGVuZHBvaW50KTsKICAgICAgICAgICAgcmV0dXJuIG5leHQodm0gPT4gewogICAgICAgICAgICAgICAgKHZtLmNvbXBhbnlfbmFtZT0gZGF0YS5jb21wYW55X25hbWUpLAogICAgICAgICAgICAgICAgKHZtLmNvbXBhbnlfZW1haWw9IGRhdGEuY29tcGFueV9lbWFpbCksCiAgICAgICAgICAgICAgICAodm0uam9iX3RpdGxlPSBkYXRhLmpvYl90aXRsZSksCiAgICAgICAgICAgICAgICAodm0uam9iX2Rlc2NyaXB0aW9uPSBkYXRhLmpvYl9kZXNjcmlwdGlvbiksCiAgICAgICAgICAgICAgICAodm0uc2FsYXJ5PSBkYXRhLnNhbGFyeSksCiAgICAgICAgICAgICAgICAodm0ucHJlZmVjdHVyZXM9IGRhdGEucHJlZmVjdHVyZXMpLAogICAgICAgICAgICAgICAgKHZtLmNpdHk9IGRhdGEuY2l0eSkKICAgICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIG5leHQoKTsKICAgICAgICB9CiAgICB9LAogICAgY3JlYXRlZCgpIHsKICAgICAgICBkb2N1bWVudC50aXRsZSA9ICJFZGl0b3IgLSBKb2IiOwogICAgfQp9Cg=="},{"version":3,"sources":["JobEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JobEditor.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <v-container>\n            <form @submit.prevent = \"onSubmit\">\n                <v-text-field\n                    v-model = \"company_name\"\n                    label = \"会社名\"\n                    required\n                ></v-text-field>>\n\n                <v-text-field\n                    v-model = \"job_title\"\n                    label = \"職種\"\n                    required\n                ></v-text-field>>\n\n                <v-text-field\n                    v-model = \"company_email\"\n                    label = \"E-mail\"\n                    required\n                ></v-text-field>>\n\n                <v-text-field\n                    v-model = \"job_description\"\n                    label = \"仕事内容\"\n                    required\n                ></v-text-field>>\n\n                <v-text-field\n                    v-model = \"salary\"\n                    label = \"給料\"\n                    required\n                ></v-text-field>>\n\n                <v-text-field\n                    v-model = \"prefectures\"\n                    label = \"都道府県\"\n                    required\n                ></v-text-field>>\n\n                <v-text-field\n                    v-model = \"city\"\n                    label = \"市町村\"\n                    required\n                ></v-text-field>>\n\n                <div class = \"text-center\">\n                    <v-btn\n                        color = \"success\"\n                        type = \"submit\"\n                    >送信\n                    </v-btn>\n                </div>\n            </form>\n        </v-container>\n    </div>\n</template>\n\n<script>\nimport { apiService } from \"../common/api.service.js\"\n\nexport default {\n    name: \"JobEditor\",\n        props: {\n           id: {\n               type: Number,\n               required: false\n          }\n    },\n    data() {\n        return {\n            company_name: null,\n            company_email: null,\n            job_title: null,\n            job_description: null,\n            salary: null,\n            prefectures: null,\n            city: null,\n            error: null\n        }\n    },\n    methods: {\n        onSubmit() {\n            let endpoint = \"/api/jobs/\";\n            let method = \"POST\";\n            if (this.id !== undefined) {\n                endpoint += `${this.id}/`;\n                method = \"PUT\";\n            }\n            apiService(endpoint, method, {\n                company_name: this.company_name,\n                company_email: this.company_email,\n                job_title: this.job_title,\n                job_description: this.job_description,\n                salary: this.salary,\n                prefectures: this.prefectures,\n                city: this.city,\n            }).then(job_data => {\n                this.$router.push({\n                    name: 'job',\n                    params: { id: job_data.id }\n                })\n            })\n        }\n    },\n    async beforeRouteEnter (to, from, next) {\n        if (to.params.id !== undefined) {\n            let endpoint = `/api/jobs/${ to.params.id }/`;\n            let data = await apiService(endpoint);\n            return next(vm => {\n                (vm.company_name= data.company_name),\n                (vm.company_email= data.company_email),\n                (vm.job_title= data.job_title),\n                (vm.job_description= data.job_description),\n                (vm.salary= data.salary),\n                (vm.prefectures= data.prefectures),\n                (vm.city= data.city)\n            });\n        } else {\n            return next();\n        }\n    },\n    created() {\n        document.title = \"Editor - Job\";\n    }\n}\n</script>\n\n<style scoped>\n</style>"]}]}